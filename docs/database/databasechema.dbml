// Charity Management System Database Schema - Fully Normalized for 3NF Compliance

// =============================================================================
// LOOKUP TABLES FOR BETTER NORMALIZATION
// =============================================================================

Table categories {
  id integer [primary key, increment]
  name varchar(100) [unique, not null]
  description text
  type enum('team', 'campaign', 'blog', 'event') [not null]
  display_order integer [default: 0]
  is_active boolean [not null, default: true]
  created_at timestamp [not null, default: `now()`]
  updated_at timestamp [not null, default: `now()`]
}

Table user_roles {
  id integer [primary key, increment]
  name varchar(50) [unique, not null]
  description text
  permissions json [not null]
  is_active boolean [not null, default: true]
  created_at timestamp [not null, default: `now()`]
}

Table user_statuses {
  id integer [primary key, increment]
  name varchar(50) [unique, not null]
  description text
  is_active boolean [not null, default: true]
  created_at timestamp [not null, default: `now()`]
}

Table project_statuses {
  id integer [primary key, increment]
  name varchar(50) [unique, not null]
  description text
  is_active boolean [not null, default: true]
  display_order integer [default: 0]
}

Table campaign_statuses {
  id integer [primary key, increment]
  name varchar(50) [unique, not null]
  description text
  is_active boolean [not null, default: true]
  display_order integer [default: 0]
}

Table urgency_levels {
  id integer [primary key, increment]
  name varchar(20) [unique, not null]
  description text
  priority_score integer [not null]
  color_code varchar(7) // Hex color for UI
  is_active boolean [not null, default: true]
}

Table currencies {
  id integer [primary key, increment]
  code varchar(3) [unique, not null] // ISO 4217 codes
  name varchar(50) [not null]
  symbol varchar(5) [not null]
  exchange_rate_to_usd decimal(10,6) [not null, default: 1.000000]
  is_active boolean [not null, default: true]
  updated_at timestamp [not null, default: `now()`]
}

// =============================================================================
// ADDRESS MANAGEMENT (PRIVACY-CONSCIOUS DESIGN)
// =============================================================================

// Address information - treated as optional PII
// Consider collecting only necessary location data based on feature requirements
Table addresses {
  id integer [primary key, increment]
  street_line_1 varchar(255) [null] // Optional for privacy
  street_line_2 varchar(255) [null]
  city varchar(100) [null] // Only city might be needed for most features
  state varchar(100) [null] // Region/state optional
  postal_code varchar(20) [null] // Optional for privacy
  country varchar(100) [null] // Optional, can default based on locale
  latitude decimal(10,8) [null] // Optional geolocation
  longitude decimal(11,8) [null] // Optional geolocation
  is_validated boolean [not null, default: false]
  created_at timestamp [not null, default: `now()`]
  updated_at timestamp [not null, default: `now()`]
}

// =============================================================================
// USER MANAGEMENT SYSTEM
// =============================================================================

// User table with minimized required personal data
// Only email (for login) and security fields (role, status) are required
Table users {
  id integer [primary key, increment]
  email varchar(255) [unique, not null] // Required for authentication
  password_hash varchar(255) [not null] // Required for security
  first_name varchar(100) [null] // Optional personal info
  last_name varchar(100) [null] // Optional personal info
  phone varchar(20) [null] // Optional contact info
  role_id integer [not null, ref: > user_roles.id] // Prevent deletion of roles in use
  status_id integer [not null, ref: > user_statuses.id] // Prevent deletion of statuses in use
  profile_image varchar(255) [null] // Optional
  address_id integer [null, ref: > addresses.id] // Address can be deleted
  email_verified boolean [not null, default: false]
  phone_verified boolean [not null, default: false]
  two_factor_enabled boolean [not null, default: false]
  created_at timestamp [not null, default: `now()`]
  updated_at timestamp [not null, default: `now()`]
  last_login timestamp [null]
}

// =============================================================================
// TEAM MANAGEMENT
// =============================================================================

Table teams {
  id integer [primary key, increment]
  name varchar(100) [not null]
  description text
  category_id integer [not null, ref: > categories.id] // Can't delete categories used by teams
  team_leader_id integer [ref: > users.id] // Leader can be removed
  status enum('active', 'inactive') [not null, default: 'active']
  max_members integer [null] // Optional team size limit
  created_at timestamp [not null, default: `now()`]
  updated_at timestamp [not null, default: `now()`]
}

Table team_members {
  id integer [primary key, increment]
  team_id integer [not null, ref: > teams.id]
  user_id integer [not null, ref: > users.id]
  joined_at timestamp [not null, default: `now()`]
  status enum('active', 'inactive') [not null, default: 'active']
  role varchar(50) [null] // Team-specific role
  
  indexes {
    (team_id, user_id) [unique]
  }
}

// =============================================================================
// CAMPAIGN MANAGEMENT
// =============================================================================

Table campaigns {
  id integer [primary key, increment]
  title varchar(200) [not null]
  description text [not null]
  goal_amount decimal(12,2) [not null]
  currency_id integer [not null, ref: > currencies.id] // Normalized currency
  category_id integer [not null, ref: > categories.id]
  status_id integer [not null, ref: > campaign_statuses.id] // Normalized status
  start_date date [not null]
  end_date date
  image_url varchar(255)
  address_id integer [ref: > addresses.id, null]
  target_beneficiaries integer
  urgency_level_id integer [not null, ref: > urgency_levels.id] // Normalized urgency
  created_by integer [ref: > users.id]
  created_at timestamp [not null, default: `now()`]
  updated_at timestamp [not null, default: `now()`]
}

// Separate table to track campaign statistics (calculated values)
Table campaign_statistics {
  id integer [primary key, increment]
  campaign_id integer [ref: > campaigns.id, unique, not null]
  current_amount decimal(12,2) [not null, default: 0]
  donations_count integer [not null, default: 0]
  unique_donors_count integer [not null, default: 0]
  average_donation decimal(10,2) [not null, default: 0]
  completion_percentage decimal(5,2) [not null, default: 0]
  last_donation_date timestamp
  updated_at timestamp [not null, default: `now()`]
}

// =============================================================================
// DONATION MANAGEMENT
// =============================================================================

// Donor table with minimal required information
// Support fully anonymous donations with optional personal details
Table donors {
  id integer [primary key, increment]
  user_id integer [ref: > users.id, null] // Optional link to user account
  first_name varchar(100) [null] // Optional if anonymous
  last_name varchar(100) [null] // Optional if anonymous
  email varchar(255) [null] // Optional contact - donor's choice
  phone varchar(20) [null] // Optional contact
  address_id integer [ref: > addresses.id, null] // Optional location
  is_anonymous boolean [not null, default: true] // Default to anonymous for privacy
  created_at timestamp [not null, default: `now()`]
  updated_at timestamp [not null, default: `now()`]
}

Table payment_methods {
  id integer [primary key, increment]
  name varchar(50) [unique, not null]
  description text
  processing_fee_percentage decimal(5,4) [default: 0]
  fixed_fee_amount decimal(8,2) [default: 0]
  is_active boolean [not null, default: true]
  requires_verification boolean [not null, default: false]
  supported_currencies json [null] // Array of currency IDs
  created_at timestamp [not null, default: `now()`]
}

Table donation_statuses {
  id integer [primary key, increment]
  name varchar(30) [unique, not null]
  description text
  is_final boolean [not null, default: false] // Whether status can change
  display_order integer [default: 0]
  is_active boolean [not null, default: true]
}

Table recurring_frequencies {
  id integer [primary key, increment]
  name varchar(20) [unique, not null]
  description text
  days_interval integer [not null] // Number of days between occurrences
  display_order integer [default: 0]
  is_active boolean [not null, default: true]
}

Table donations {
  id integer [primary key, increment]
  donor_id integer [not null, ref: > donors.id] // Preserve donation history
  campaign_id integer [not null, ref: > campaigns.id] // Preserve campaign history
  amount decimal(10,2) [not null]
  currency_id integer [not null, ref: > currencies.id] // Normalized currency
  payment_method_id integer [not null, ref: > payment_methods.id] // Preserve payment method history
  payment_reference varchar(100)
  status_id integer [not null, ref: > donation_statuses.id] // Normalized status
  is_recurring boolean [not null, default: false]
  recurring_frequency_id integer [null, ref: > recurring_frequencies.id] // Normalized frequency
  parent_donation_id integer [null, ref: > donations.id] // For recurring donations
  processing_fee decimal(8,2) [null]
  net_amount decimal(10,2) [null] // Amount after fees
  notes text
  donation_date timestamp [not null, default: `now()`]
  processed_at timestamp [null]
  created_at timestamp [not null, default: `now()`]
}

// =============================================================================
// PROJECT MANAGEMENT
// =============================================================================

Table projects {
  id integer [primary key, increment]
  title varchar(200) [not null]
  description text [not null]
  team_id integer [ref: > teams.id]
  campaign_id integer [ref: > campaigns.id, null]
  start_date date [not null]
  end_date date
  status_id integer [not null, ref: > project_statuses.id] // Normalized status
  budget decimal(12,2)
  currency_id integer [ref: > currencies.id, null] // Normalized currency for budget
  address_id integer [ref: > addresses.id, null]
  created_by integer [ref: > users.id]
  created_at timestamp [not null, default: `now()`]
  updated_at timestamp [not null, default: `now()`]
}

// Separate table for project progress tracking
Table project_progress {
  id integer [primary key, increment]
  project_id integer [ref: > projects.id, unique, not null]
  progress_percentage integer [not null, default: 0]
  hours_logged decimal(8,2) [not null, default: 0]
  volunteers_count integer [not null, default: 0]
  tasks_completed integer [not null, default: 0]
  tasks_total integer [not null, default: 0]
  last_update_date timestamp
  updated_at timestamp [not null, default: `now()`]
}

// =============================================================================
// EVENT MANAGEMENT
// =============================================================================

Table event_statuses {
  id integer [primary key, increment]
  name varchar(30) [unique, not null]
  description text
  display_order integer [default: 0]
  is_active boolean [not null, default: true]
}

Table events {
  id integer [primary key, increment]
  title varchar(200) [not null]
  description text [not null]
  event_date datetime [not null]
  address_id integer [ref: > addresses.id, not null]
  capacity integer [not null]
  ticket_price decimal(8,2) [not null, default: 0]
  currency_id integer [not null, ref: > currencies.id] // Normalized currency
  status_id integer [not null, ref: > event_statuses.id] // Normalized status
  image_url varchar(255)
  registration_deadline datetime
  category_id integer [not null, ref: > categories.id] // Normalized category
  created_by integer [ref: > users.id]
  created_at timestamp [not null, default: `now()`]
  updated_at timestamp [not null, default: `now()`]
}

Table registration_statuses {
  id integer [primary key, increment]
  name varchar(30) [unique, not null]
  description text
  display_order integer [default: 0]
  is_active boolean [not null, default: true]
}

Table payment_statuses {
  id integer [primary key, increment]
  name varchar(30) [unique, not null]
  description text
  display_order integer [default: 0]
  is_active boolean [not null, default: true]
}

Table event_registrations {
  id integer [primary key, increment]
  event_id integer [not null, ref: > events.id]
  user_id integer [not null, ref: > users.id]
  registration_date timestamp [not null, default: `now()`]
  status_id integer [not null, ref: > registration_statuses.id] // Normalized status
  payment_status_id integer [not null, ref: > payment_statuses.id] // Normalized payment status
  payment_reference varchar(100)
  special_requirements text
  
  indexes {
    (event_id, user_id) [unique]
  }
}

// =============================================================================
// VOLUNTEER MANAGEMENT
// =============================================================================

// Privacy-sensitive table containing PII that requires special handling
// Requirements:
// 1. Data should be encrypted at rest
// 2. Access should be strictly controlled and logged
// 3. Implement data retention policies
// 4. Obtain explicit consent before collection
// 5. Support data subject access requests (DSAR)
Table emergency_contacts {
  id integer [primary key, increment]
  name varchar(100) [not null] // PII: Full name
  phone varchar(20) [not null] // PII: Contact number
  email varchar(255) [null] // PII: Email address
  relationship varchar(50) [not null] // PII: Personal relationship
  address_id integer [ref: > addresses.id, null] // PII: Physical address reference 
  created_at timestamp [not null, default: `now()`]
  updated_at timestamp [not null, default: `now()`]

  note: 'Contains PII - requires encryption, access controls, and consent management'
}

Table volunteer_skills {
  id integer [primary key, increment]
  name varchar(100) [unique, not null]
  description text
  category varchar(50)
  is_active boolean [not null, default: true]
  created_at timestamp [not null, default: `now()`]
}

Table background_check_statuses {
  id integer [primary key, increment]
  name varchar(30) [unique, not null]
  description text
  requires_action boolean [not null, default: false]
  display_order integer [default: 0]
  is_active boolean [not null, default: true]
}

Table volunteer_statuses {
  id integer [primary key, increment]
  name varchar(30) [unique, not null]
  description text
  is_active_status boolean [not null, default: true] // Whether volunteer can participate
  display_order integer [default: 0]
  is_active boolean [not null, default: true]
}

// Note: Emergency contact information contains PII and is subject to data protection regulations.
// Ensure proper encryption, access controls, and explicit user consent for collection.
Table volunteers {
  id integer [primary key, increment]
  user_id integer [not null, ref: > users.id]
  availability text
  emergency_contact_id integer [ref: > emergency_contacts.id, null] // Optional for privacy compliance
  background_check_status_id integer [ref: > background_check_statuses.id, not null]
  background_check_date date
  background_check_expiry date
  joined_date date [not null]
  status_id integer [not null, ref: > volunteer_statuses.id] // Normalized status
  created_at timestamp [not null, default: `now()`]
  updated_at timestamp [not null, default: `now()`]
}

// Junction table for volunteer skills (many-to-many)
Table volunteer_skill_assignments {
  id integer [primary key, increment]
  volunteer_id integer [not null, ref: > volunteers.id]
  skill_id integer [not null, ref: > volunteer_skills.id]
  proficiency_level enum('beginner', 'intermediate', 'advanced', 'expert') [not null, default: 'beginner']
  years_experience integer [default: 0]
  created_at timestamp [not null, default: `now()`]
  
  indexes {
    (volunteer_id, skill_id) [unique]
  }
}

// Separate table for volunteer statistics (calculated values)
Table volunteer_statistics {
  id integer [primary key, increment]
  volunteer_id integer [ref: > volunteers.id, unique, not null]
  total_hours decimal(8,2) [not null, default: 0]
  activities_count integer [not null, default: 0]
  projects_count integer [not null, default: 0]
  events_count integer [not null, default: 0]
  teams_count integer [not null, default: 0]
  last_activity_date timestamp
  updated_at timestamp [not null, default: `now()`]
}

Table activity_types {
  id integer [primary key, increment]
  name varchar(50) [unique, not null]
  description text
  requires_verification boolean [not null, default: false]
  display_order integer [default: 0]
  is_active boolean [not null, default: true]
}

Table volunteer_activities {
  id integer [primary key, increment]
  volunteer_id integer [not null, ref: > volunteers.id]
  activity_type_id integer [not null, ref: > activity_types.id] // Normalized activity type
  description text [not null]
  hours_logged decimal(4,2) [not null]
  activity_date date [not null]
  project_id integer [ref: > projects.id, null]
  event_id integer [ref: > events.id, null]
  verified_by integer [ref: > users.id, null]
  verification_date timestamp
  verification_notes text
  created_at timestamp [not null, default: `now()`]
}

// =============================================================================
// CONTENT MANAGEMENT
// =============================================================================

Table blog_post_statuses {
  id integer [primary key, increment]
  name varchar(30) [unique, not null]
  description text
  is_published boolean [not null, default: false]
  display_order integer [default: 0]
  is_active boolean [not null, default: true]
}

Table blog_posts {
  id integer [primary key, increment]
  title varchar(200) [not null]
  content text [not null]
  excerpt text
  category_id integer [not null, ref: > categories.id]
  status_id integer [not null, ref: > blog_post_statuses.id] // Normalized status
  featured_image varchar(255)
  author_id integer [ref: > users.id]
  published_at timestamp [null]
  created_at timestamp [not null, default: `now()`]
  updated_at timestamp [not null, default: `now()`]
}

// =============================================================================
// COMMUNICATION SYSTEM
// =============================================================================

Table team_communications {
  id integer [primary key, increment]
  team_id integer [not null, ref: > teams.id]
  sender_id integer [not null, ref: > users.id]
  message_type enum('announcement', 'discussion', 'poll') [not null]
  title varchar(200) [not null]
  content text [not null]
  is_pinned boolean [not null, default: false]
  created_at timestamp [not null, default: `now()`]
  updated_at timestamp [not null, default: `now()`]
}

Table team_polls {
  id integer [primary key, increment]
  communication_id integer [not null, ref: > team_communications.id]
  question text [not null]
  is_multiple_choice boolean [not null, default: false]
  closes_at timestamp
  is_anonymous boolean [not null, default: false]
  created_at timestamp [not null, default: `now()`]
}

Table team_poll_options {
  id integer [primary key, increment]
  poll_id integer [not null, ref: > team_polls.id]
  option_text varchar(255) [not null]
  display_order integer [not null]
  created_at timestamp [not null, default: `now()`]
}

Table team_poll_votes {
  id integer [primary key, increment]
  poll_id integer [not null, ref: > team_polls.id]
  user_id integer [not null, ref: > users.id]
  option_id integer [not null, ref: > team_poll_options.id]
  voted_at timestamp [not null, default: `now()`]
  
  indexes {
    (poll_id, user_id, option_id) [unique]
  }
}

// =============================================================================
// NOTIFICATION SYSTEM
// =============================================================================

Table notification_types {
  id integer [primary key, increment]
  name varchar(50) [unique, not null]
  description text
  template_subject varchar(255)
  template_body text
  priority enum('low', 'normal', 'high', 'urgent') [not null, default: 'normal']
  is_active boolean [not null, default: true]
  created_at timestamp [not null, default: `now()`]
}

Table delivery_methods {
  id integer [primary key, increment]
  name varchar(20) [unique, not null]
  description text
  is_active boolean [not null, default: true]
  requires_config boolean [not null, default: false]
}

Table notifications {
  id integer [primary key, increment]
  user_id integer [not null, ref: > users.id]
  notification_type_id integer [not null, ref: > notification_types.id]
  title varchar(200) [not null]
  message text [not null]
  is_read boolean [not null, default: false]
  // Separate foreign keys for each possible related entity
  campaign_id integer [ref: > campaigns.id, null]
  donation_id integer [ref: > donations.id, null]
  event_id integer [ref: > events.id, null]
  project_id integer [ref: > projects.id, null]
  team_id integer [ref: > teams.id, null]
  blog_post_id integer [ref: > blog_posts.id, null]
  delivery_method_id integer [not null, ref: > delivery_methods.id] // Normalized delivery method
  delivered_at timestamp
  read_at timestamp
  expires_at timestamp [null] // Optional expiration
  created_at timestamp [not null, default: `now()`]

  // Business rule: Only one related entity should be non-null
  note: 'Only one of campaign_id, donation_id, event_id, project_id, team_id, or blog_post_id should be non-null at a time'
}

// =============================================================================
// SETTINGS MANAGEMENT
// =============================================================================

Table setting_categories {
  id integer [primary key, increment]
  name varchar(50) [unique, not null]
  description text
  display_order integer [default: 0]
  is_active boolean [not null, default: true]
  created_at timestamp [not null, default: `now()`]
}

Table setting_data_types {
  id integer [primary key, increment]
  name varchar(20) [unique, not null]
  validation_pattern varchar(255)
  description text
  is_active boolean [not null, default: true]
}

Table settings {
  id integer [primary key, increment]
  key varchar(100) [unique, not null]
  value text [not null]
  description text
  category_id integer [not null, ref: > setting_categories.id]
  data_type_id integer [not null, ref: > setting_data_types.id]
  is_public boolean [not null, default: false]
  is_encrypted boolean [not null, default: false]
  created_at timestamp [not null, default: `now()`]
  updated_at timestamp [not null, default: `now()`]
}

// =============================================================================
// AUDIT SYSTEM
// =============================================================================

Table entity_types {
  id integer [primary key, increment]
  name varchar(50) [unique, not null]
  table_name varchar(50) [not null]
  description text
  is_active boolean [not null, default: true]
}

Table audit_actions {
  id integer [primary key, increment]
  name varchar(50) [unique, not null]
  description text
  severity enum('low', 'medium', 'high', 'critical') [not null, default: 'medium']
  is_active boolean [not null, default: true]
}

Table audit_logs {
  id integer [primary key, increment]
  user_id integer [ref: > users.id, null]
  action_id integer [not null, ref: > audit_actions.id]
  entity_type_id integer [not null, ref: > entity_types.id]
  entity_id integer [not null]
  old_values json [null]
  new_values json [null]
  affected_columns text[] [null] // Array of changed columns
  ip_address varchar(45)
  user_agent text
  session_id varchar(255)
  created_at timestamp [not null, default: `now()`]
  
  indexes {
    (entity_type_id, entity_id)
    (user_id, created_at)
    (action_id, created_at)
    created_at
  }
}
